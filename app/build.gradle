apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.firebase-perf'
//apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

android {

    compileSdkVersion 28

    defaultConfig {
        applicationId 'msa.client.androidx_dagger2_mvvm_rx3'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "$versionMajor.$versionMinor.$versionPatch"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildConfigField('String', 'FULL_VERSION_NAME', "\"$versionName.$versionCode\"")
        resValue 'string', 'application_id', applicationId
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'beaver'
            keyPassword 'beaver'
            storeFile file('keystore.jks')
            storePassword 'beaver'
        }
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            //ext.enableCrashlytics = false
            //manifestPlaceholders = [crashlyticsEnabled: false]
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // better output apk naming : {projectName}_{flavor(s)}_{buildType}_{versionName}_build_{buildVersion}.apk
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def sep = '_'
            def version = variant.versionName
            def build = variant.versionCode
            def flavors = ""
            variant.productFlavors.forEach { flavor ->
                flavors += "${flavor.name}${sep}"
            }
            outputFileName = "${rootProject.name}${sep}" +
                    "${flavors}" +
                    "${variant.buildType.name}${sep}" +
                    "${version}${sep}" +
                    "build${sep}${build}.apk"
        }
    }
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // android
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
    implementation "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$versions.navigation"

    // firebase
    implementation "com.google.firebase:firebase-core:$versions.firebase_core"
    implementation "com.google.firebase:firebase-appindexing:$versions.firebase_appindexing"
    implementation "com.google.firebase:firebase-perf:$versions.firebase_perf"
    //implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"

    // dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.assisted_inject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$versions.assisted_inject"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
    implementation "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-drawerlayout:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-leanback:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-recyclerview:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:$versions.rxbinding"
    //implementation "com.jakewharton.rxbinding3:rxbinding-viewpager:$versions.rxbinding"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$versions.rxpreferences"
    implementation "net.samystudio.rxpicasso:rxpicasso-kotlin:$versions.rxpicasso"

    // network
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    // debug
    implementation "com.jakewharton.timber:timber:$versions.timber"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"

    // misc
    implementation "com.evernote:android-state:$versions.android_state"
    kapt "com.evernote:android-state-processor:$versions.android_state"

    // test
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.test:core:$versions.test_core"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_core"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
}

apply plugin: 'com.google.gms.google-services'